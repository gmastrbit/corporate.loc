Урок 55. Установка фреймворка

    Зміна налаштувань проекту
        APP_URL=http://localhost => APP_URL=http://corporate.loc
        DB_HOST=127.0.0.1 => DB_HOST=localhost
        DB_DATABASE=homestead => DB_DATABASE=corporate
        DB_USERNAME=homestead => DB_USERNAME=mysql
        DB_PASSWORD=secret => DB_PASSWORD=mysql
        MAIL_DRIVER=smtp => MAIL_DRIVER=mail
        MAIL_HOST=mailtrap.io => MAIL_HOST=
        MAIL_PORT=2525 => MAIL_PORT=
        MAIL_USERNAME=null => MAIL_USERNAME=
        MAIL_PASSWORD=null => MAIL_PASSWORD=
        MAIL_ENCRYPTION=null => MAIL_ENCRYPTION=

        THEME=pink

    config > settings.php - новий файл налаштувань

Урок 56. Створення БД

    Визначення власного простору імен
        php artisan app:name Corp

    Формуємо міграції
        php artisan make:migration CreateArticlesTable --create=articles - дана міграція створить у БД таблицю articles

    php artisan make:auth

Урок 57. Маршрути. Глобальний контролер користувацької частини

    Route::resource(); - формування групи маршрутів, які будуть оброблятися контролером типу ресурс.
    Даний контролер використовується для додатків формату REST.
    REST - стиль архітектури програмного забезпечення для створення розподільних систем.
    Даний стиль архітектури використоється для побудови веб-служб

    Керування інформацією сервіса повністю основується на протоколі передачі даних. НТТР

    REST надає певний стандартний інтерфейс для роботи з даними

    SiteController - батьківський контролер для всіх контрлерів користувацької частини

Урок 58. Вибірка інформації для головного меню проекта

    Меню - загальний елемент для кожної сторінки сайту

    Контролери відпрацьовують логіку для відображення конкретних сторінок нашого проекта

    Класи-репозиторії будуть зберігати в собі методи для реалізації того чи іншого функціоналу

Урок 59. Відображення головного меню на екран

    Підключаємо новий компонент до проекту: "lavary/laravel-menu": "dev-master"

    Створення меню

    $menu->roots() повертає лише батьківські пункти меню
    $item->children() повертає лише дочрні пункти меню

Урок 60. Створення слайдера

    Створення slider.blade.php та винесення логіки в контролер

    php artisan make:model Slider

    Створення власної директиви Blade
        @set($i,1)


    app > Providers > AppServiceProvider.php
         public function boot()
            {
                // створення власної директиви
                Blade::directive('set', function ($exp) {
                    list($name, $val) = explode(',', $exp);
                    return "<?php $name = $val ?>";
                });
            }
